---
name: CI
"on": push
env:
  OUTPUT_DIR: output
  OUTPUT_STAT: stat.json

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - uses: actions/cache@v4
        name: Setup uv cache
        with:
          path: .venv
          key: ${{ runner.os }}-uv-store-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-store-

      - run: uv sync

      - run: mkdir -p ${{ env.OUTPUT_DIR }}
      - run: >-
          uv run task lint_python -p OUTPUT_STAT=${{ env.OUTPUT_DIR }}/${{ env.OUTPUT_STAT }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> "${GITHUB_ENV}"

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install


      - run: uv run task -p lint_node

      - name: Generate badge images
        if: github.ref == 'refs/heads/master'
        run: >-
          node ./koniwa/badge.js
          ${{ env.OUTPUT_DIR }}/${{ env.OUTPUT_STAT }}
          ${{ env.OUTPUT_DIR }}/badge

      - name: Deploy stat
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.OUTPUT_DIR }}
