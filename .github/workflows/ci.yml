---
name: CI
"on": push
env:
  OUTPUT_DIR: output
  OUTPUT_STAT: stat.json

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - run: pip install poetry
      - run: poetry install
      - run: mkdir -p ${{ env.OUTPUT_DIR }}
      - run: >-
          poetry run make lint_python -j $(nproc) \
           OUTPUT_STAT=${{ env.OUTPUT_DIR }}/${{ env.OUTPUT_STAT }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install


      - run: poetry run make lint_node -j $(nproc)

      - name: Generate badge images
        if: github.ref == 'refs/heads/master'
        run: >-
          node ./koniwa/badge.js
          ${{ env.OUTPUT_DIR }}/${{ env.OUTPUT_STAT }}
          ${{ env.OUTPUT_DIR }}/badge

      - name: Deploy stat
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.OUTPUT_DIR }}
